{
	"info": {
		"_postman_id": "dc6361da-3535-4443-86d8-4247fe08c370",
		"name": "Teste tecnico",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25777004"
	},
	"item": [
		{
			"name": "criar usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 201 - Usuário criado\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Response should contain userID\", function () {\r",
							"    const response = pm.response.json();\r",
							"    pm.expect(response).to.have.property(\"userID\");\r",
							"    pm.expect(response.userID).to.be.a('string').that.is.not.empty;\r",
							"});\r",
							"\r",
							"let jsonData = pm.response.json();\r",
							"\r",
							"// salva o username gerado para usar no login\r",
							"pm.collectionVariables.set(\"username\", jsonData.username);\r",
							"\r",
							"console.log(\"Usuário criado:\", jsonData.username);\r",
							"\r",
							"// Fixed the property access for userID\r",
							"pm.environment.set(\"userID\", jsonData.userID);\r",
							"\r",
							"\r",
							"let userId = jsonData.id || (jsonData.user && jsonData.user.id);\r",
							"\r",
							"if (userId) {\r",
							"    pm.environment.set(\"userId\", userId);\r",
							"    console.log(\"userId definido:\", userId);\r",
							"} else {\r",
							"    console.error(\"Não foi possível encontrar o userId na resposta:\", jsonData);\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "\r\n{\r\n  \"userName\": \"{{$randomUserName}}\",\r\n  \"password\": \"2025*Setembro\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://demoqa.com/Account/v1/User",
					"protocol": "https",
					"host": [
						"demoqa",
						"com"
					],
					"path": [
						"Account",
						"v1",
						"User"
					]
				}
			},
			"response": []
		},
		{
			"name": "Gerar token de acesso",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json();\r",
							"\r",
							"// Atualiza o valor da variável de coleção\r",
							"pm.collectionVariables.set(\"token\", jsonData.token);\r",
							"\r",
							"// Atualiza também o valor de ambiente (opcional, mas garante no runner)\r",
							"pm.environment.set(\"token\", jsonData.token);\r",
							"\r",
							"console.log(\"Token salvo:\", jsonData.token);\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"// Test for status code\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"console.log(\"Token gerado:\", jsonData.token);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "\r\n{\r\n  \"userName\": \"{{$randomUserName}}\",\r\n  \"password\": \"2025*Setembro\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://demoqa.com/Account/v1/GenerateToken",
					"protocol": "https",
					"host": [
						"demoqa",
						"com"
					],
					"path": [
						"Account",
						"v1",
						"GenerateToken"
					]
				}
			},
			"response": []
		},
		{
			"name": "confirmar se o usuário criado está autorizado",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 200 - Usuário autorizado\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyTmFtZSI6IlJpY28iLCJwYXNzd29yZCI6IjIwMjUqU2V0ZW1icm8iLCJpYXQiOjE3NTc5OTM1NDN9.V4iJIdkBzL9_RTK1XppHeyHsVes4v2th_aeQhw6MpJY",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{authToken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://demoqa.com/Account/v1/Authorized",
					"protocol": "https",
					"host": [
						"demoqa",
						"com"
					],
					"path": [
						"Account",
						"v1",
						"Authorized"
					]
				}
			},
			"response": []
		},
		{
			"name": "Listar os livros disponíveis",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 200 - listar livros\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://demoqa.com/BookStore/v1/Books",
					"protocol": "https",
					"host": [
						"demoqa",
						"com"
					],
					"path": [
						"BookStore",
						"v1",
						"Books"
					]
				}
			},
			"response": []
		},
		{
			"name": "Alugar  livros ",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 200 -livro alugado com sucesso \", function () {\r",
							"pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyTmFtZSI6IlJpY28iLCJwYXNzd29yZCI6IjIwMjUqU2V0ZW1icm8iLCJpYXQiOjE3NTc5OTI4OTZ9.KgYJ2_1B92jzw62lHdPiRYUDVxfnVdmaT1tKaDbwjYc",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer{{authToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\r\n{\r\n  \"userId\": \"b657912a-4def-4efd-a35f-552b9d864abd\",\r\n  \"collectionOfIsbns\": [\r\n    {\r\n      \"isbn\": \"9781449365035\"\r\n    }\r\n  ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://demoqa.com/BookStore/v1/Books",
					"protocol": "https",
					"host": [
						"demoqa",
						"com"
					],
					"path": [
						"BookStore",
						"v1",
						"Books"
					]
				}
			},
			"response": []
		},
		{
			"name": "Listar os detalhes do usuário",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 200 - Usuário localizado\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyTmFtZSI6IlJpY28iLCJwYXNzd29yZCI6IjIwMjUqU2V0ZW1icm8iLCJpYXQiOjE3NTc5OTM1NDN9.V4iJIdkBzL9_RTK1XppHeyHsVes4v2th_aeQhw6MpJY",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer{{authToken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://demoqa.com/Account/v1/User/b657912a-4def-4efd-a35f-552b9d864abd",
					"protocol": "https",
					"host": [
						"demoqa",
						"com"
					],
					"path": [
						"Account",
						"v1",
						"User",
						"b657912a-4def-4efd-a35f-552b9d864abd"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "authToken",
			"value": ""
		},
		{
			"key": "username",
			"value": ""
		},
		{
			"key": "token",
			"value": ""
		}
	]
}